spring.data.mongodb.uri=${MONGODB_PC_URI}

#spring.data.mongodb.uri=mongodb://e-user1:pwd1@pc-mongo:27017/ecommerce

#use admin
#db.createUser(
# {
#    user: "root",
#    pwd: "rootroot",
#    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
#  }
#)

#docker exec -it mongo bash

#mongo -u admin

#db.createUser({user: "e-user1", pwd: "pwd1", roles : [{role: "readWrite", db: "ecommerce"}]});

#db.createUser({user: "e-user2", pwd: "pwd2", roles : [{role: "readWrite", db: "ecommerce"}]});

#use db
#db.dropUser('e-user1') 
#
#docker ps -a
#
#docker rm -f ### 
#
#docker images
#
#docker rmi -f ###
#
#mvn clean install -DskipTests
#
#docker build -f product-catalog-dockfile -t product-catalog .
#
#
#
#docker run -p 8080:8080 --name product-catalog --link=mongo  --network=my-net product-catalog 

#docker run -d -p 27017:27017 -v /Users/lyipb/data:/data/db  --network=my-net --name mongo mongo 

#docker login -u lyipb
#
#product_catalog lyipb$ docker tag 4649c2d772b5 lyipb/ecommerce-product-catalog:1.0
#
#product_catalog lyipb$ docker push lyipb/ecommerce-product-catalog:1.0

#mongodump --host=localhost --port=27017 --username=admin --password='admin' --out=/Users/lyipb/mongobackup/mongodump-2021-09-25


#minikube delete
#
#minikube start --vm=true --driver=hyperkit --memory=2.5g
#
#minikube addons enable ingress
#
#minikube ip

#minikube config set memory 3g

#
#open /etc/hosts
#
#sudo vim /etc/hosts

#istioctl install

#istioctl install --set profile=demo(without ingress!!!)

#kubectl label namespace default istio-injection=enabled

#kubectl get svc -n istio-system | grep ingress
#
#kubectl get svc -n istio-system | grep istio-ingress

#minikube tunnel &

#kubectl apply -f /Users/lyipb/istio-1.11.3/samples/addons/grafana.yaml 
#.......
#
#.......




# kubectl get namespace -L istio-injection

#inside k8s pod
###
#apt-get update
#apt-get install iputils-ping

#which mongo

#kubectl run mongo --rm -it  --image=mongo -- sh
#
#kubectl get pv,pvc,pod,svc,sts   
#
#kubectl exec -it pc-mongo-0  -- mongo
#
#kubectl scale sts pc-mongo --replicas=5

#sudo mkdir -p /tmp/data/pv{0..4}
#
#sudo  chmod 777 -R /tmp/data

#rs.initiate()
#
#var cfg = rs.config()
#
#cfg.members[0].host="pc-mongo-0.pc-mongo:27017" 
#
#rs.reconfig(cfg)
#
#rs.add("pc-mongo-1.pc-mongo:27017")
#
#rs.add("pc-mongo-2.pc-mongo:27017")
#
#db.setSlaveOk()

#db.product.insert({id: "test_id", title:"test_title", desc:"test_desc", imagePath:"test_imgPath",unitPrice:0})


#db.product_inventory.insert({id: "test_id", productId: "test_id", quantity:500})

#db.product_inventory.insert({id: "test-product-789", productId: "test-product-789", quantity:550})
#db.product_inventory.update({productId: "test_id"},{$set:{quantity:550}})

#{
#	  "id": "test-product-789",
#	  "title": "test-product-789",
#	  "desc": "test product 17879",
#	  "imagePath": "http://test-image-path2",
#	  "unitPrice": 20
#	}
#
#{
#	  "productId": "test-product-789",
#	  "quantity": 500,
#
#	}


#gcloud container clusters get-credentials my-first-cluster-1 --zone us-east1-c --project spring-boot-ecommerce-329911
#

#----

#gcloud auth configure-docker
#
#docker tag 7191f2705f6b  gcr.io/curious-ellipse-318103/ecommerce-product-inventory
#
#docker push  gcr.io/curious-ellipse-318103/ecommerce-product-inventory

#export PROJECT_ID=\u201D$(gcloud config get-value project -q)\u201D




#rs.initiate({_id: "rs0", version: 1, members: [
#       { _id: 0, host : "mongod-0.mongodb-service:27017" },
#       { _id: 1, host : "mongod-1.mongodb-service:27017" },
#       { _id: 2, host : "mongod-2.mongodb-service:27017" }
# ]});
#
#rs.initiate()
#
#var cfg = rs.config()
#
#cfg.members[0].host="mongod-0.mongodb-service:27017" 
#
#rs.reconfig(cfg)
#rs.add("mongod-1.mongodb-service:27017")
#
#rs.add("mongod-2.mongodb-service:27017")
#




#
#db.getSiblingDB("admin").createUser({
#      user : "root",
#      pwd  : "rootroot",
#      roles: [ { role: "root", db: "admin" } ]
# });
#
# db.getSiblingDB('admin').auth("root", "rootroot");



#use test;
#db.testcoll.insert({a:1});
#db.testcoll.insert({b:2});
#db.testcoll.find();


# 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 
# git init
# git add .
# git commit -m "xxx"
# git remote 
# git remote -v 
# git remote remove origin
# git remote add origin https://github.com/lyipb/gke-ecomm-demo.git
# git remote -v
# git push -u origin master